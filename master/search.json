[{"path":"https://gowerc.github.io/diffdf/articles/diffdf-basic.html","id":"basic-usage","dir":"Articles","previous_headings":"","what":"Basic usage","title":"Introduction to diffdf","text":"show basic functionality diffdf using dummy data set. expect differences found. now look introduce various types differences data order show diffdf highlights . Note purposes vignette used suppress_warnings argument stop errors raised; recommended however option used production code may mask problems.","code":"library(diffdf)  LENGTH <- 30  suppressWarnings(RNGversion(\"3.5.0\")) set.seed(12334)  test_data <- tibble::tibble(     ID          = 1:LENGTH,     GROUP1      = rep(c(1, 2), each = LENGTH / 2),     GROUP2      = rep(c(1:(LENGTH / 2)), 2),     INTEGER     = rpois(LENGTH, 40),     BINARY      = sample(c(\"M\", \"F\"), LENGTH, replace = TRUE),     DATE        = lubridate::ymd(\"2000-01-01\") + rnorm(LENGTH, 0, 7000),     DATETIME    = lubridate::ymd_hms(\"2000-01-01 00:00:00\") + rnorm(LENGTH, 0, 200000000),     CONTINUOUS  = rnorm(LENGTH, 30, 12),     CATEGORICAL = factor(sample(c(\"A\", \"B\", \"C\"), LENGTH, replace = TRUE)),     LOGICAL     = sample(c(TRUE, FALSE), LENGTH, replace = TRUE),     CHARACTER   = stringi::stri_rand_strings(LENGTH, rpois(LENGTH, 13), pattern = \"[ A-Za-z0-9]\") )  test_data #> # A tibble: 30 × 11 #>       ID GROUP1 GROUP2 INTEGER BINARY DATE       DATETIME            CONTINUOUS #>    <int>  <dbl>  <int>   <int> <chr>  <date>     <dttm>                   <dbl> #>  1     1      1      1      41 M      2003-06-22 2000-11-28 20:40:53       21.6 #>  2     2      1      2      41 F      2016-12-03 1994-08-30 19:05:02       26.5 #>  3     3      1      3      41 M      2016-05-08 1992-09-11 11:30:18       16.1 #>  4     4      1      4      32 M      2015-06-02 2007-11-12 11:28:29       23.5 #>  5     5      1      5      55 F      1986-04-15 1998-08-04 01:27:49       21.2 #>  6     6      1      6      33 M      1994-05-25 2001-12-05 08:24:35       46.9 #>  7     7      1      7      40 F      2009-02-08 1986-11-02 18:13:03       28.2 #>  8     8      1      8      44 F      2020-07-21 1998-08-22 05:23:24       27.7 #>  9     9      1      9      51 F      1967-05-25 2003-01-03 22:09:29       22.0 #> 10    10      1     10      40 M      2044-03-11 1996-04-19 11:10:12       40.9 #> # ℹ 20 more rows #> # ℹ 3 more variables: CATEGORICAL <fct>, LOGICAL <lgl>, CHARACTER <chr>  diffdf(test_data, test_data) #> No issues were found!"},{"path":"https://gowerc.github.io/diffdf/articles/diffdf-basic.html","id":"missing-columns","dir":"Articles","previous_headings":"Basic usage","what":"Missing Columns","title":"Introduction to diffdf","text":"","code":"test_data2 <- test_data test_data2 <- test_data2[, -6] diffdf(test_data, test_data2, suppress_warnings = TRUE) #> Differences found between the objects! #>  #> A summary is given below. #>  #> There are columns in BASE that are not in COMPARE !! #> All rows are shown in table below #>  #>   ========= #>    COLUMNS  #>   --------- #>     DATE    #>   ---------"},{"path":"https://gowerc.github.io/diffdf/articles/diffdf-basic.html","id":"missing-rows","dir":"Articles","previous_headings":"Basic usage","what":"Missing Rows","title":"Introduction to diffdf","text":"","code":"test_data2 <- test_data test_data2 <- test_data2[1:(nrow(test_data2) - 2), ] diffdf(test_data, test_data2, suppress_warnings = TRUE) #> Differences found between the objects! #>  #> A summary is given below. #>  #> There are rows in BASE that are not in COMPARE !! #> All rows are shown in table below #>  #>   =============== #>    ..ROWNUMBER..  #>   --------------- #>         29        #>         30        #>   ---------------"},{"path":"https://gowerc.github.io/diffdf/articles/diffdf-basic.html","id":"different-values","dir":"Articles","previous_headings":"Basic usage","what":"Different Values","title":"Introduction to diffdf","text":"","code":"test_data2 <- test_data test_data2[5, 2] <- 6 diffdf(test_data, test_data2, suppress_warnings = TRUE) #> Differences found between the objects! #>  #> A summary is given below. #>  #> Not all Values Compared Equal #> All rows are shown in table below #>  #>   ============================= #>    Variable  No of Differences  #>   ----------------------------- #>     GROUP1           1          #>   ----------------------------- #>  #>  #> All rows are shown in table below #>  #>   ======================================== #>    VARIABLE  ..ROWNUMBER..  BASE  COMPARE  #>   ---------------------------------------- #>     GROUP1         5         1       6     #>   ----------------------------------------"},{"path":"https://gowerc.github.io/diffdf/articles/diffdf-basic.html","id":"different-types","dir":"Articles","previous_headings":"Basic usage","what":"Different Types","title":"Introduction to diffdf","text":"","code":"test_data2 <- test_data test_data2[, 2] <- as.character(test_data2[, 2]) diffdf(test_data, test_data2, suppress_warnings = TRUE) #> Differences found between the objects! #>  #> A summary is given below. #>  #> There are columns in BASE and COMPARE with different modes !! #> All rows are shown in table below #>  #>   ================================ #>    VARIABLE  MODE.BASE  MODE.COMP  #>   -------------------------------- #>     GROUP1    numeric   character  #>   -------------------------------- #>  #> There are columns in BASE and COMPARE with different classes !! #> All rows are shown in table below #>  #>   ================================== #>    VARIABLE  CLASS.BASE  CLASS.COMP  #>   ---------------------------------- #>     GROUP1    numeric    character   #>   ----------------------------------"},{"path":"https://gowerc.github.io/diffdf/articles/diffdf-basic.html","id":"different-labels","dir":"Articles","previous_headings":"Basic usage","what":"Different Labels","title":"Introduction to diffdf","text":"","code":"test_data2 <- test_data attr(test_data$ID, \"label\") <- \"This is a interesting label\" attr(test_data2$ID, \"label\") <- \"what do I type here?\" diffdf(test_data, test_data2, suppress_warnings = TRUE) #> Differences found between the objects! #>  #> A summary is given below. #>  #> There are columns in BASE and COMPARE with differing attributes !! #> All rows are shown in table below #>  #>   ============================================================================ #>    VARIABLE  ATTR_NAME           VALUES.BASE                VALUES.COMP        #>   ---------------------------------------------------------------------------- #>       ID       label    \"This is a interesting label\"  \"what do I type here?\"  #>   ----------------------------------------------------------------------------"},{"path":"https://gowerc.github.io/diffdf/articles/diffdf-basic.html","id":"different-factor-levels","dir":"Articles","previous_headings":"Basic usage","what":"Different Factor Levels","title":"Introduction to diffdf","text":"","code":"test_data2 <- test_data levels(test_data2$CATEGORICAL) <- c(1, 2, 3) diffdf(test_data, test_data2, suppress_warnings = TRUE) #> Differences found between the objects! #>  #> A summary is given below. #>  #> There are columns in BASE and COMPARE with differing attributes !! #> All rows are shown in table below #>  #>   ============================================================ #>     VARIABLE    ATTR_NAME    VALUES.BASE       VALUES.COMP     #>   ------------------------------------------------------------ #>    CATEGORICAL   levels    c(\"A\", \"B\", \"C\")  c(\"1\", \"2\", \"3\")  #>   ------------------------------------------------------------ #>  #> Not all Values Compared Equal #> All rows are shown in table below #>  #>   ================================ #>     Variable    No of Differences  #>   -------------------------------- #>    CATEGORICAL         30          #>   -------------------------------- #>  #>  #> First 10 of 30 rows are shown in table below #>  #>   =========================================== #>     VARIABLE    ..ROWNUMBER..  BASE  COMPARE  #>   ------------------------------------------- #>    CATEGORICAL        1         C       3     #>    CATEGORICAL        2         C       3     #>    CATEGORICAL        3         A       1     #>    CATEGORICAL        4         C       3     #>    CATEGORICAL        5         A       1     #>    CATEGORICAL        6         A       1     #>    CATEGORICAL        7         A       1     #>    CATEGORICAL        8         A       1     #>    CATEGORICAL        9         C       3     #>    CATEGORICAL       10         B       2     #>   -------------------------------------------"},{"path":"https://gowerc.github.io/diffdf/articles/diffdf-basic.html","id":"grouping-variables","dir":"Articles","previous_headings":"","what":"Grouping Variables","title":"Introduction to diffdf","text":"key feature diffdf enables easier diagnostics ability specify variables form unique row .e. rows compared based upon key. default key specified diffdf use row numbers key however general isn’t recommended means two identical datasets simply sorted differently can lead incomprehensible error messages every observation flagged different. diffdf keys can specified character vectors using keys argument.","code":"test_data2 <- test_data test_data2$INTEGER[c(5, 2, 15)] <- 99L diffdf(test_data, test_data2, keys = c(\"GROUP1\", \"GROUP2\"), suppress_warnings = TRUE) #> Differences found between the objects! #>  #> A summary is given below. #>  #> Not all Values Compared Equal #> All rows are shown in table below #>  #>   ============================= #>    Variable  No of Differences  #>   ----------------------------- #>    INTEGER           3          #>   ----------------------------- #>  #>  #> All rows are shown in table below #>  #>   ========================================= #>    VARIABLE  GROUP1  GROUP2  BASE  COMPARE  #>   ----------------------------------------- #>    INTEGER     1        2     41     99     #>    INTEGER     1        5     55     99     #>    INTEGER     1       15     44     99     #>   -----------------------------------------"},{"path":[]},{"path":"https://gowerc.github.io/diffdf/articles/diffdf-basic.html","id":"accessing-problem-rows","dir":"Articles","previous_headings":"Misc","what":"Accessing problem rows","title":"Introduction to diffdf","text":"additional utility diffdf comes function diffdf_issuerows() can used subset dataset issue object return just rows flagged containing issues. Bear mind vars option can used just subset issues associated particular variables.","code":"iris2 <- iris for (i in 1:3) iris2[i, i] <- 99 diff <- diffdf(iris, iris2, suppress_warnings = TRUE) diffdf_issuerows(iris, diff) #>   Sepal.Length Sepal.Width Petal.Length Petal.Width Species #> 1          5.1         3.5          1.4         0.2  setosa #> 2          4.9         3.0          1.4         0.2  setosa #> 3          4.7         3.2          1.3         0.2  setosa diffdf_issuerows(iris2, diff) #>   Sepal.Length Sepal.Width Petal.Length Petal.Width Species #> 1         99.0         3.5          1.4         0.2  setosa #> 2          4.9        99.0          1.4         0.2  setosa #> 3          4.7         3.2         99.0         0.2  setosa diffdf_issuerows(iris2, diff, vars = \"Sepal.Length\") #>   Sepal.Length Sepal.Width Petal.Length Petal.Width Species #> 1           99         3.5          1.4         0.2  setosa diffdf_issuerows(iris2, diff, vars = c(\"Sepal.Length\", \"Sepal.Width\")) #>   Sepal.Length Sepal.Width Petal.Length Petal.Width Species #> 1         99.0         3.5          1.4         0.2  setosa #> 2          4.9        99.0          1.4         0.2  setosa"},{"path":"https://gowerc.github.io/diffdf/articles/diffdf-basic.html","id":"are-there-issues","dir":"Articles","previous_headings":"Misc","what":"Are there issues ?","title":"Introduction to diffdf","text":"Sometimes can useful use comparison result fuel checks programming logic. assist diffdf offers two pieces functionality namely suppress_warnings argument (already shown) diffdf_has_issues() helper function simply returns TRUE differences found else FALSE.","code":"iris2 <- iris for (i in 1:3) iris2[i, i] <- 99 diff <- diffdf(iris, iris2, suppress_warnings = TRUE)  diffdf_has_issues(diff) #> [1] TRUE if (diffdf_has_issues(diff)) {     #<Further programming steps / logic> }"},{"path":"https://gowerc.github.io/diffdf/articles/diffdf-basic.html","id":"tolerance","dir":"Articles","previous_headings":"Misc","what":"Tolerance","title":"Introduction to diffdf","text":"can use tolerance argument diffdf define sensitive comparison decimal place inaccuracies. important often floating point numbers compare equal due machine rounding perfectly represented binary. default tolerance set sqrt(.Machine$double.eps)","code":"dsin1 <- data.frame(x = 1.1e-06) dsin2 <- data.frame(x = 1.1e-07)  diffdf(dsin1, dsin2, suppress_warnings = TRUE) #> Differences found between the objects! #>  #> A summary is given below. #>  #> Not all Values Compared Equal #> All rows are shown in table below #>  #>   ============================= #>    Variable  No of Differences  #>   ----------------------------- #>       x              1          #>   ----------------------------- #>  #>  #> All rows are shown in table below #>  #>   =========================================== #>    VARIABLE  ..ROWNUMBER..   BASE    COMPARE  #>   ------------------------------------------- #>       x            1        1.1e-06  1.1e-07  #>   -------------------------------------------  diffdf(dsin1, dsin2, tolerance = 0.001, suppress_warnings = TRUE) #> No issues were found!"},{"path":"https://gowerc.github.io/diffdf/articles/diffdf-basic.html","id":"strictness","dir":"Articles","previous_headings":"Misc","what":"Strictness","title":"Introduction to diffdf","text":"default, function note difference integer double columns, factor character columns. can useful contexts prevent occurring. can strict_numeric = FALSE strict_factor = FALSE arguments.","code":"dsin1 <- data.frame(x = as.integer(c(1, 2, 3))) dsin2 <- data.frame(x = as.numeric(c(1, 2, 3)))  diffdf(dsin1, dsin2, suppress_warnings = TRUE) #> Differences found between the objects! #>  #> A summary is given below. #>  #> There are columns in BASE and COMPARE with different classes !! #> All rows are shown in table below #>  #>   ================================== #>    VARIABLE  CLASS.BASE  CLASS.COMP  #>   ---------------------------------- #>       x       integer     numeric    #>   ---------------------------------- diffdf(dsin1, dsin2, suppress_warnings = TRUE, strict_numeric = FALSE) #> NOTE: Variable x in base was casted to numeric #> No issues were found!  dsin1 <- data.frame(x = as.character(c(1, 2, 3)), stringsAsFactors = FALSE) dsin2 <- data.frame(x = as.factor(c(1, 2, 3)))  diffdf(dsin1, dsin2, suppress_warnings = TRUE) #> Differences found between the objects! #>  #> A summary is given below. #>  #> There are columns in BASE and COMPARE with different modes !! #> All rows are shown in table below #>  #>   ================================ #>    VARIABLE  MODE.BASE  MODE.COMP  #>   -------------------------------- #>       x      character   numeric   #>   -------------------------------- #>  #> There are columns in BASE and COMPARE with different classes !! #> All rows are shown in table below #>  #>   ================================== #>    VARIABLE  CLASS.BASE  CLASS.COMP  #>   ---------------------------------- #>       x      character     factor    #>   ---------------------------------- diffdf(dsin1, dsin2, suppress_warnings = TRUE, strict_factor = FALSE) #> NOTE: Variable x in compare was casted to character #> No issues were found!"},{"path":"https://gowerc.github.io/diffdf/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Craig Gower-Page. Maintainer, author. Kieran Martin. Author.","code":""},{"path":"https://gowerc.github.io/diffdf/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Gower-Page C, Martin K (2024). diffdf: Dataframe Difference Tool. R package version 1.0.4.900, https://github.com/gowerc/diffdf/, https://gowerc.github.io/diffdf/.","code":"@Manual{,   title = {diffdf: Dataframe Difference Tool},   author = {Craig Gower-Page and Kieran Martin},   year = {2024},   note = {R package version 1.0.4.900, https://github.com/gowerc/diffdf/},   url = {https://gowerc.github.io/diffdf/}, }"},{"path":"https://gowerc.github.io/diffdf/index.html","id":"diffdf","dir":"","previous_headings":"","what":"Dataframe Difference Tool","title":"Dataframe Difference Tool","text":"diffdf package designed enable detailed comparison two data.frames. Whilst many packages exist informing differences data.frames, none provide much detail differences diffdf ! Currently diffdf supports following: Checking differences values Checking differences attributes Checking differences classes Checking differences column names Checking differences number observations Matching rows key/id variables Fuzzy comparisons (.e. treating doubles integers ) Extracting datasets different rows information features please consult vignette man pages.","code":""},{"path":"https://gowerc.github.io/diffdf/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Dataframe Difference Tool","text":"can install released version diffdf CRAN : development version GitHub :","code":"install.packages(\"diffdf\") # install.packages(\"devtools\") devtools::install_github(\"gowerc/diffdf\")"},{"path":"https://gowerc.github.io/diffdf/index.html","id":"example","dir":"","previous_headings":"","what":"Example","title":"Dataframe Difference Tool","text":"","code":"library(diffdf) iris2 <- iris for (i in 1:3) iris2[i,i] <- i^2 iris2$new_var <- \"hello\" class(iris2$Species) <- \"some class\" diffdf(iris, iris2)"},{"path":"https://gowerc.github.io/diffdf/reference/as_ascii_table.html","id":null,"dir":"Reference","previous_headings":"","what":"as_ascii_table — as_ascii_table","title":"as_ascii_table — as_ascii_table","text":"function takes data.frame attempts convert simple ascii format suitable printing screen assumed variable values .character() method order cast character.","code":""},{"path":"https://gowerc.github.io/diffdf/reference/as_ascii_table.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"as_ascii_table — as_ascii_table","text":"","code":"as_ascii_table(dat, line_prefix = \"  \")"},{"path":"https://gowerc.github.io/diffdf/reference/as_ascii_table.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"as_ascii_table — as_ascii_table","text":"dat Input dataset convert ascii table line_prefix Symbols prefix front every line table","code":""},{"path":"https://gowerc.github.io/diffdf/reference/as_fmt_char.html","id":null,"dir":"Reference","previous_headings":"","what":"Format vector to printable string — as_fmt_char","title":"Format vector to printable string — as_fmt_char","text":"Coerces vector type printable string. significant transformation performed existing character vectors truncated, newlines converted explicit symbols wrapped quotes contain white space.","code":""},{"path":"https://gowerc.github.io/diffdf/reference/as_fmt_char.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Format vector to printable string — as_fmt_char","text":"","code":"as_fmt_char(x, ...)  # S3 method for class 'numeric' as_fmt_char(x, ...)  # S3 method for class '`NULL`' as_fmt_char(x, ...)  # S3 method for class 'list' as_fmt_char(x, ...)  # S3 method for class 'factor' as_fmt_char(x, ...)  # S3 method for class 'character' as_fmt_char(x, add_quotes = TRUE, crop_at = 30, ...)"},{"path":"https://gowerc.github.io/diffdf/reference/as_fmt_char.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Format vector to printable string — as_fmt_char","text":"x (vector)  vector converted character ... additional arguments (currently used) add_quotes (logical)  true wrap strings contain whitespace quotes crop_at (numeric)  specifies limit strings truncated ","code":""},{"path":"https://gowerc.github.io/diffdf/reference/cast_variables.html","id":null,"dir":"Reference","previous_headings":"","what":"cast_variables — cast_variables","title":"cast_variables — cast_variables","text":"Function cast datasets columns differing types Restricted specific cases, currently integer double, character factor","code":""},{"path":"https://gowerc.github.io/diffdf/reference/cast_variables.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"cast_variables — cast_variables","text":"","code":"cast_variables(   BASE,   COMPARE,   ignore_vars = NULL,   cast_integers = FALSE,   cast_factors = FALSE )"},{"path":"https://gowerc.github.io/diffdf/reference/cast_variables.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"cast_variables — cast_variables","text":"BASE base dataset COMPARE comparison dataset ignore_vars Variables considered casting cast_integers Logical - Whether integers cased double compared doubles cast_factors Logical - Whether characters casted characters compared characters","code":""},{"path":"https://gowerc.github.io/diffdf/reference/class_merge.html","id":null,"dir":"Reference","previous_headings":"","what":"class_merge — class_merge","title":"class_merge — class_merge","text":"Convenience function put classes object one string","code":""},{"path":"https://gowerc.github.io/diffdf/reference/class_merge.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"class_merge — class_merge","text":"","code":"class_merge(x)"},{"path":"https://gowerc.github.io/diffdf/reference/class_merge.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"class_merge — class_merge","text":"x object","code":""},{"path":"https://gowerc.github.io/diffdf/reference/compare_vectors.default.html","id":null,"dir":"Reference","previous_headings":"","what":"compare_vectors.default — compare_vectors.default","title":"compare_vectors.default — compare_vectors.default","text":"Default method, vector numeric factor. Basic comparison","code":""},{"path":"https://gowerc.github.io/diffdf/reference/compare_vectors.default.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"compare_vectors.default — compare_vectors.default","text":"","code":"# Default S3 method compare_vectors(target, current, ...)"},{"path":"https://gowerc.github.io/diffdf/reference/compare_vectors.default.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"compare_vectors.default — compare_vectors.default","text":"target base vector current vector compare target ... Additional arguments might passed (numerical accuracy)","code":""},{"path":"https://gowerc.github.io/diffdf/reference/compare_vectors.factor.html","id":null,"dir":"Reference","previous_headings":"","what":"compare_vectors.factor — compare_vectors.factor","title":"compare_vectors.factor — compare_vectors.factor","text":"Compares factors. Sets character compares","code":""},{"path":"https://gowerc.github.io/diffdf/reference/compare_vectors.factor.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"compare_vectors.factor — compare_vectors.factor","text":"","code":"# S3 method for class 'factor' compare_vectors(target, current, ...)"},{"path":"https://gowerc.github.io/diffdf/reference/compare_vectors.factor.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"compare_vectors.factor — compare_vectors.factor","text":"target base vector current vector compare target ... Additional arguments might passed (numerical accuracy)","code":""},{"path":"https://gowerc.github.io/diffdf/reference/compare_vectors.html","id":null,"dir":"Reference","previous_headings":"","what":"compare_vectors — compare_vectors","title":"compare_vectors — compare_vectors","text":"Compare two vectors looking differences","code":""},{"path":"https://gowerc.github.io/diffdf/reference/compare_vectors.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"compare_vectors — compare_vectors","text":"","code":"compare_vectors(target, current, ...)"},{"path":"https://gowerc.github.io/diffdf/reference/compare_vectors.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"compare_vectors — compare_vectors","text":"target base vector current vector compare target ... Additional arguments might passed (numerical accuracy)","code":""},{"path":"https://gowerc.github.io/diffdf/reference/compare_vectors.integer64.html","id":null,"dir":"Reference","previous_headings":"","what":"compare_vectors.int64 — compare_vectors.integer64","title":"compare_vectors.int64 — compare_vectors.integer64","text":"Handle int64 vectors. Uses numeric comparison","code":""},{"path":"https://gowerc.github.io/diffdf/reference/compare_vectors.integer64.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"compare_vectors.int64 — compare_vectors.integer64","text":"","code":"# S3 method for class 'integer64' compare_vectors(   target,   current,   tolerance = sqrt(.Machine$double.eps),   scale = NULL )"},{"path":"https://gowerc.github.io/diffdf/reference/compare_vectors.integer64.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"compare_vectors.int64 — compare_vectors.integer64","text":"target base vector current vector compare target tolerance Level tolerance differences two variables scale Scale tolerance set . NULL assume absolute","code":""},{"path":"https://gowerc.github.io/diffdf/reference/compare_vectors.numeric.html","id":null,"dir":"Reference","previous_headings":"","what":"compare_vectors.numeric — compare_vectors.numeric","title":"compare_vectors.numeric — compare_vectors.numeric","text":"modified version .equal function returns vector rather message","code":""},{"path":"https://gowerc.github.io/diffdf/reference/compare_vectors.numeric.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"compare_vectors.numeric — compare_vectors.numeric","text":"","code":"# S3 method for class 'numeric' compare_vectors(   target,   current,   tolerance = sqrt(.Machine$double.eps),   scale = NULL )"},{"path":"https://gowerc.github.io/diffdf/reference/compare_vectors.numeric.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"compare_vectors.numeric — compare_vectors.numeric","text":"target base vector current vector compare target tolerance Level tolerance differences two variables scale Scale tolerance set . NULL assume absolute","code":""},{"path":"https://gowerc.github.io/diffdf/reference/construct_issue.html","id":null,"dir":"Reference","previous_headings":"","what":"construct_issue — construct_issue","title":"construct_issue — construct_issue","text":"Make s3 object class issue possible additional class, assign arguments attributes","code":""},{"path":"https://gowerc.github.io/diffdf/reference/construct_issue.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"construct_issue — construct_issue","text":"","code":"construct_issue(value, message, add_class = NULL)"},{"path":"https://gowerc.github.io/diffdf/reference/construct_issue.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"construct_issue — construct_issue","text":"value value object message value message attribute add_class additional class add","code":""},{"path":"https://gowerc.github.io/diffdf/reference/convert_to_issue.html","id":null,"dir":"Reference","previous_headings":"","what":"convert_to_issue — convert_to_issue","title":"convert_to_issue — convert_to_issue","text":"converts count value correct issue format","code":""},{"path":"https://gowerc.github.io/diffdf/reference/convert_to_issue.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"convert_to_issue — convert_to_issue","text":"","code":"convert_to_issue(datin)"},{"path":"https://gowerc.github.io/diffdf/reference/convert_to_issue.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"convert_to_issue — convert_to_issue","text":"datin data inputted","code":""},{"path":"https://gowerc.github.io/diffdf/reference/diffdf.html","id":null,"dir":"Reference","previous_headings":"","what":"diffdf — diffdf","title":"diffdf — diffdf","text":"Compares 2 dataframes outputs differences.","code":""},{"path":"https://gowerc.github.io/diffdf/reference/diffdf.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"diffdf — diffdf","text":"","code":"diffdf(   base,   compare,   keys = NULL,   suppress_warnings = FALSE,   strict_numeric = TRUE,   strict_factor = TRUE,   file = NULL,   tolerance = sqrt(.Machine$double.eps),   scale = NULL )"},{"path":"https://gowerc.github.io/diffdf/reference/diffdf.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"diffdf — diffdf","text":"base input dataframe compare comparison dataframe keys vector variables (strings) defines unique row base compare dataframes suppress_warnings want suppress warnings? (logical) strict_numeric Flag strict numeric numeric comparisons (default = TRUE). False diffdf cast integer double required comparisons. Note variables specified keys never casted. strict_factor Flag strict factor character comparisons (default = TRUE). False diffdf cast factors characters required comparisons. Note variables specified keys never casted. file Location name text file output results . Setting NULL cause file produced. tolerance Set tolerance numeric comparisons. Note comparisons fail (x-y)/scale > tolerance. scale Set scale numeric comparisons. Note comparisons fail (x-y)/scale > tolerance. Setting NULL slightly efficient version scale = 1.","code":""},{"path":"https://gowerc.github.io/diffdf/reference/diffdf.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"diffdf — diffdf","text":"","code":"x <- subset(iris, -Species) #> Warning: ‘-’ not meaningful for factors x[1, 2] <- 5 COMPARE <- diffdf(iris, x) #> Warning:  #> There are rows in BASE that are not in COMPARE !! #> Not all Values Compared Equal print(COMPARE) #> Differences found between the objects! #>  #> A summary is given below. #>  #> There are rows in BASE that are not in COMPARE !! #> First 10 of 149 rows are shown in table below #>  #>   =============== #>    ..ROWNUMBER..  #>   --------------- #>          2        #>          3        #>          4        #>          5        #>          6        #>          7        #>          8        #>          9        #>         10        #>         11        #>   --------------- #>  #> Not all Values Compared Equal #> All rows are shown in table below #>  #>   ================================= #>      Variable    No of Differences  #>   --------------------------------- #>    Sepal.Length          1          #>    Sepal.Width           1          #>    Petal.Length          1          #>    Petal.Width           1          #>      Species             1          #>   --------------------------------- #>  #>  #> All rows are shown in table below #>  #>   ============================================ #>      VARIABLE    ..ROWNUMBER..  BASE  COMPARE  #>   -------------------------------------------- #>    Sepal.Length        1        5.1     NA     #>   -------------------------------------------- #>  #>  #> All rows are shown in table below #>  #>   =========================================== #>     VARIABLE    ..ROWNUMBER..  BASE  COMPARE  #>   ------------------------------------------- #>    Sepal.Width        1        3.5      5     #>   ------------------------------------------- #>  #>  #> All rows are shown in table below #>  #>   ============================================ #>      VARIABLE    ..ROWNUMBER..  BASE  COMPARE  #>   -------------------------------------------- #>    Petal.Length        1        1.4     NA     #>   -------------------------------------------- #>  #>  #> All rows are shown in table below #>  #>   =========================================== #>     VARIABLE    ..ROWNUMBER..  BASE  COMPARE  #>   ------------------------------------------- #>    Petal.Width        1        0.2     NA     #>   ------------------------------------------- #>  #>  #> All rows are shown in table below #>  #>   ========================================== #>    VARIABLE  ..ROWNUMBER..   BASE   COMPARE  #>   ------------------------------------------ #>    Species         1        setosa   <NA>    #>   ------------------------------------------ #>   #### Sample data frames  DF1 <- data.frame(     id = c(1, 2, 3, 4, 5, 6),     v1 = letters[1:6],     v2 = c(NA, NA, 1, 2, 3, NA) )  DF2 <- data.frame(     id = c(1, 2, 3, 4, 5, 7),     v1 = letters[1:6],     v2 = c(NA, NA, 1, 2, NA, NA),     v3 = c(NA, NA, 1, 2, NA, 4) )  diffdf(DF1, DF1, keys = \"id\") #> No issues were found!  # We can control matching with scale/location for example:  DF1 <- data.frame(     id = c(1, 2, 3, 4, 5, 6),     v1 = letters[1:6],     v2 = c(1, 2, 3, 4, 5, 6) ) DF2 <- data.frame(     id = c(1, 2, 3, 4, 5, 6),     v1 = letters[1:6],     v2 = c(1.1, 2, 3, 4, 5, 6) )  diffdf(DF1, DF2, keys = \"id\") #> Warning:  #> Not all Values Compared Equal #> Differences found between the objects! #>  #> A summary is given below. #>  #> Not all Values Compared Equal #> All rows are shown in table below #>  #>   ============================= #>    Variable  No of Differences  #>   ----------------------------- #>       v2             1          #>   ----------------------------- #>  #>  #> All rows are shown in table below #>  #>   ============================= #>    VARIABLE  id  BASE  COMPARE  #>   ----------------------------- #>       v2     1    1      1.1    #>   ----------------------------- #>  diffdf(DF1, DF2, keys = \"id\", tolerance = 0.2) #> No issues were found! diffdf(DF1, DF2, keys = \"id\", scale = 10, tolerance = 0.2) #> No issues were found!  # We can use strict_factor to compare factors with characters for example:  DF1 <- data.frame(     id = c(1, 2, 3, 4, 5, 6),     v1 = letters[1:6],     v2 = c(NA, NA, 1, 2, 3, NA),     stringsAsFactors = FALSE )  DF2 <- data.frame(     id = c(1, 2, 3, 4, 5, 6),     v1 = letters[1:6],     v2 = c(NA, NA, 1, 2, 3, NA) )  diffdf(DF1, DF2, keys = \"id\", strict_factor = TRUE) #> No issues were found! diffdf(DF1, DF2, keys = \"id\", strict_factor = FALSE) #> No issues were found!"},{"path":"https://gowerc.github.io/diffdf/reference/diffdf_has_issues.html","id":null,"dir":"Reference","previous_headings":"","what":"diffdf_has_issues — diffdf_has_issues","title":"diffdf_has_issues — diffdf_has_issues","text":"Utility function returns TRUE diffdf object issues FALSE diffdf object issues","code":""},{"path":"https://gowerc.github.io/diffdf/reference/diffdf_has_issues.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"diffdf_has_issues — diffdf_has_issues","text":"","code":"diffdf_has_issues(x)"},{"path":"https://gowerc.github.io/diffdf/reference/diffdf_has_issues.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"diffdf_has_issues — diffdf_has_issues","text":"x diffdf object","code":""},{"path":"https://gowerc.github.io/diffdf/reference/diffdf_has_issues.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"diffdf_has_issues — diffdf_has_issues","text":"","code":"# Example with no issues x <- diffdf(iris, iris) diffdf_has_issues(x) #> [1] FALSE  # Example with issues iris2 <- iris iris2[2, 2] <- NA x <- diffdf(iris, iris2, suppress_warnings = TRUE) diffdf_has_issues(x) #> [1] TRUE"},{"path":"https://gowerc.github.io/diffdf/reference/diffdf_issuerows.html","id":null,"dir":"Reference","previous_headings":"","what":"Identify Issue Rows — diffdf_issuerows","title":"Identify Issue Rows — diffdf_issuerows","text":"function takes diffdf object dataframe subsets data.frame problem rows identified comparison object. vars specified issue rows associated variable(s) returned.","code":""},{"path":"https://gowerc.github.io/diffdf/reference/diffdf_issuerows.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Identify Issue Rows — diffdf_issuerows","text":"","code":"diffdf_issuerows(df, diff, vars = NULL)"},{"path":"https://gowerc.github.io/diffdf/reference/diffdf_issuerows.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Identify Issue Rows — diffdf_issuerows","text":"df dataframe subsetted diff diffdf object vars (optional) character vector containing names issue variables subset dataframe . value NULL (default) taken mean available issue variables.","code":""},{"path":"https://gowerc.github.io/diffdf/reference/diffdf_issuerows.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Identify Issue Rows — diffdf_issuerows","text":"Note diffdf_issuerows can used subset dataframe. requirement original variables specified keys argument diffdf present dataframe subsetting . However please note keys specified diffdf row number used. means using diffdf_issuerows without keys arbitrary dataset can easily result nonsense rows returned. always recommended supply keys diffdf.","code":""},{"path":"https://gowerc.github.io/diffdf/reference/diffdf_issuerows.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Identify Issue Rows — diffdf_issuerows","text":"","code":"iris2 <- iris for (i in 1:3) iris2[i, i] <- 99 x <- diffdf(iris, iris2, suppress_warnings = TRUE) diffdf_issuerows(iris, x) #>   Sepal.Length Sepal.Width Petal.Length Petal.Width Species #> 1          5.1         3.5          1.4         0.2  setosa #> 2          4.9         3.0          1.4         0.2  setosa #> 3          4.7         3.2          1.3         0.2  setosa diffdf_issuerows(iris2, x) #>   Sepal.Length Sepal.Width Petal.Length Petal.Width Species #> 1         99.0         3.5          1.4         0.2  setosa #> 2          4.9        99.0          1.4         0.2  setosa #> 3          4.7         3.2         99.0         0.2  setosa diffdf_issuerows(iris2, x, vars = \"Sepal.Length\") #>   Sepal.Length Sepal.Width Petal.Length Petal.Width Species #> 1           99         3.5          1.4         0.2  setosa diffdf_issuerows(iris2, x, vars = c(\"Sepal.Length\", \"Sepal.Width\")) #>   Sepal.Length Sepal.Width Petal.Length Petal.Width Species #> 1         99.0         3.5          1.4         0.2  setosa #> 2          4.9        99.0          1.4         0.2  setosa"},{"path":"https://gowerc.github.io/diffdf/reference/factor_to_character.html","id":null,"dir":"Reference","previous_headings":"","what":"factor_to_character — factor_to_character","title":"factor_to_character — factor_to_character","text":"Takes dataframe converts factor variables character","code":""},{"path":"https://gowerc.github.io/diffdf/reference/factor_to_character.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"factor_to_character — factor_to_character","text":"","code":"factor_to_character(dsin, vars = NULL)"},{"path":"https://gowerc.github.io/diffdf/reference/factor_to_character.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"factor_to_character — factor_to_character","text":"dsin input dataframe vars variables consider conversion. Default NULL consider every variable within dataset","code":""},{"path":"https://gowerc.github.io/diffdf/reference/find_difference.html","id":null,"dir":"Reference","previous_headings":"","what":"find_difference — find_difference","title":"find_difference — find_difference","text":"determines two vectors different. expects vectors length type, intended used checks already done Initially picks NA's (matching NA's count match) compares remaining vector","code":""},{"path":"https://gowerc.github.io/diffdf/reference/find_difference.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"find_difference — find_difference","text":"","code":"find_difference(target, current, ...)"},{"path":"https://gowerc.github.io/diffdf/reference/find_difference.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"find_difference — find_difference","text":"target base vector current vector compare target ... Additional arguments might passed (numerical accuracy)","code":""},{"path":"https://gowerc.github.io/diffdf/reference/generate_keyname.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate unique key name — generate_keyname","title":"Generate unique key name — generate_keyname","text":"Function generate name keys provided","code":""},{"path":"https://gowerc.github.io/diffdf/reference/generate_keyname.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate unique key name — generate_keyname","text":"","code":"generate_keyname(   BASE,   COMP,   replace_names = c(\"..ROWNUMBER..\", \"..RN..\", \"..ROWN..\", \"..N..\") )"},{"path":"https://gowerc.github.io/diffdf/reference/generate_keyname.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate unique key name — generate_keyname","text":"BASE base dataset COMP comparison dataset replace_names vector replacement names. Used recursion, edited function clarity","code":""},{"path":"https://gowerc.github.io/diffdf/reference/get_casted_dataset.html","id":null,"dir":"Reference","previous_headings":"","what":"get_casted_dataset — get_casted_dataset","title":"get_casted_dataset — get_casted_dataset","text":"Internal utility function loop across dataset casting target variables","code":""},{"path":"https://gowerc.github.io/diffdf/reference/get_casted_dataset.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"get_casted_dataset — get_casted_dataset","text":"","code":"get_casted_dataset(df, columns, whichdat)"},{"path":"https://gowerc.github.io/diffdf/reference/get_casted_dataset.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"get_casted_dataset — get_casted_dataset","text":"df dataset casted columns columns casted whichdat whether base compare casted (used messages)","code":""},{"path":"https://gowerc.github.io/diffdf/reference/get_casted_vector.html","id":null,"dir":"Reference","previous_headings":"","what":"get_casted_vector — get_casted_vector","title":"get_casted_vector — get_casted_vector","text":"casts vector depending type input","code":""},{"path":"https://gowerc.github.io/diffdf/reference/get_casted_vector.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"get_casted_vector — get_casted_vector","text":"","code":"get_casted_vector(colin, colname, whichdat)"},{"path":"https://gowerc.github.io/diffdf/reference/get_casted_vector.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"get_casted_vector — get_casted_vector","text":"colin column cast colname name vector whichdat whether base compare casted (used messages)","code":""},{"path":"https://gowerc.github.io/diffdf/reference/get_issue_dataset.html","id":null,"dir":"Reference","previous_headings":"","what":"get_issue_dataset — get_issue_dataset","title":"get_issue_dataset — get_issue_dataset","text":"Internal function used diffdf_issuerows extract dataframe target issue. particular also strips non-key variables","code":""},{"path":"https://gowerc.github.io/diffdf/reference/get_issue_dataset.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"get_issue_dataset — get_issue_dataset","text":"","code":"get_issue_dataset(issue, diff)"},{"path":"https://gowerc.github.io/diffdf/reference/get_issue_dataset.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"get_issue_dataset — get_issue_dataset","text":"issue name issue extract dataset diff diff diffdf object contains issues","code":""},{"path":"https://gowerc.github.io/diffdf/reference/get_issue_message.html","id":null,"dir":"Reference","previous_headings":"","what":"get_issue_message — get_issue_message","title":"get_issue_message — get_issue_message","text":"Simple function grab issue message","code":""},{"path":"https://gowerc.github.io/diffdf/reference/get_issue_message.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"get_issue_message — get_issue_message","text":"","code":"get_issue_message(object, ...)"},{"path":"https://gowerc.github.io/diffdf/reference/get_issue_message.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"get_issue_message — get_issue_message","text":"object inputted object class issue ... arguments","code":""},{"path":"https://gowerc.github.io/diffdf/reference/get_print_message.default.html","id":null,"dir":"Reference","previous_headings":"","what":"get_print_message.default — get_print_message.default","title":"get_print_message.default — get_print_message.default","text":"Errors, ever given issue","code":""},{"path":"https://gowerc.github.io/diffdf/reference/get_print_message.default.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"get_print_message.default — get_print_message.default","text":"","code":"# Default S3 method get_print_message(object)"},{"path":"https://gowerc.github.io/diffdf/reference/get_print_message.default.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"get_print_message.default — get_print_message.default","text":"object issue","code":""},{"path":"https://gowerc.github.io/diffdf/reference/get_print_message.html","id":null,"dir":"Reference","previous_headings":"","what":"get_print_message — get_print_message","title":"get_print_message — get_print_message","text":"Get required text depending type issue","code":""},{"path":"https://gowerc.github.io/diffdf/reference/get_print_message.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"get_print_message — get_print_message","text":"","code":"get_print_message(object, ...)"},{"path":"https://gowerc.github.io/diffdf/reference/get_print_message.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"get_print_message — get_print_message","text":"object inputted object class issue ... arguments","code":""},{"path":"https://gowerc.github.io/diffdf/reference/get_print_message.issue.html","id":null,"dir":"Reference","previous_headings":"","what":"get_print_message.issue — get_print_message.issue","title":"get_print_message.issue — get_print_message.issue","text":"Get text basic issue, based class value issue","code":""},{"path":"https://gowerc.github.io/diffdf/reference/get_print_message.issue.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"get_print_message.issue — get_print_message.issue","text":"","code":"# S3 method for class 'issue' get_print_message(object, row_limit, ...)"},{"path":"https://gowerc.github.io/diffdf/reference/get_print_message.issue.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"get_print_message.issue — get_print_message.issue","text":"object object class issue_basic row_limit Max row limit difference tables (NULL show rows) ... Additional arguments (used)","code":""},{"path":"https://gowerc.github.io/diffdf/reference/get_table.html","id":null,"dir":"Reference","previous_headings":"","what":"get_table — get_table","title":"get_table — get_table","text":"Generate nice looking table data frame","code":""},{"path":"https://gowerc.github.io/diffdf/reference/get_table.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"get_table — get_table","text":"","code":"get_table(dsin, row_limit = 10)"},{"path":"https://gowerc.github.io/diffdf/reference/get_table.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"get_table — get_table","text":"dsin dataset row_limit Max row limit difference tables (NULL show rows)","code":""},{"path":"https://gowerc.github.io/diffdf/reference/has_unique_rows.html","id":null,"dir":"Reference","previous_headings":"","what":"has_unique_rows — has_unique_rows","title":"has_unique_rows — has_unique_rows","text":"Check data sets rows unique","code":""},{"path":"https://gowerc.github.io/diffdf/reference/has_unique_rows.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"has_unique_rows — has_unique_rows","text":"","code":"has_unique_rows(DAT, KEYS)"},{"path":"https://gowerc.github.io/diffdf/reference/has_unique_rows.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"has_unique_rows — has_unique_rows","text":"DAT input data set (data frame) KEYS Set keys unique","code":""},{"path":"https://gowerc.github.io/diffdf/reference/identify_att_differences.html","id":null,"dir":"Reference","previous_headings":"","what":"Identify differences in attributes — identify_att_differences","title":"Identify differences in attributes — identify_att_differences","text":"Identifies attribute differences two data frames","code":""},{"path":"https://gowerc.github.io/diffdf/reference/identify_att_differences.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Identify differences in attributes — identify_att_differences","text":"","code":"identify_att_differences(BASE, COMP, exclude_cols = \"\")"},{"path":"https://gowerc.github.io/diffdf/reference/identify_att_differences.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Identify differences in attributes — identify_att_differences","text":"BASE Base dataset comparison (data.frame) COMP Comparator dataset compare base (data.frame) exclude_cols Columns exclude comparison","code":""},{"path":"https://gowerc.github.io/diffdf/reference/identify_class_differences.html","id":null,"dir":"Reference","previous_headings":"","what":"identify_class_differences — identify_class_differences","title":"identify_class_differences — identify_class_differences","text":"Identifies class differences two data frames","code":""},{"path":"https://gowerc.github.io/diffdf/reference/identify_class_differences.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"identify_class_differences — identify_class_differences","text":"","code":"identify_class_differences(BASE, COMP)"},{"path":"https://gowerc.github.io/diffdf/reference/identify_class_differences.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"identify_class_differences — identify_class_differences","text":"BASE Base dataset comparison (data.frame) COMP Comparator dataset compare base (data.frame)","code":""},{"path":"https://gowerc.github.io/diffdf/reference/identify_differences.html","id":null,"dir":"Reference","previous_headings":"","what":"identify_differences — identify_differences","title":"identify_differences — identify_differences","text":"Compares column within 2 datasets identify values mismatch .","code":""},{"path":"https://gowerc.github.io/diffdf/reference/identify_differences.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"identify_differences — identify_differences","text":"","code":"identify_differences(   BASE,   COMP,   KEYS,   exclude_cols,   tolerance = sqrt(.Machine$double.eps),   scale = NULL )"},{"path":"https://gowerc.github.io/diffdf/reference/identify_differences.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"identify_differences — identify_differences","text":"BASE Base dataset comparison (data.frame) COMP Comparator dataset compare base (data.frame) KEYS List variables define unique row within datasets (strings) exclude_cols Columns exclude comparison tolerance Level tolerance numeric differences two variables scale Scale tolerance set . NULL assume absolute","code":""},{"path":"https://gowerc.github.io/diffdf/reference/identify_extra_cols.html","id":null,"dir":"Reference","previous_headings":"","what":"identify_extra_cols — identify_extra_cols","title":"identify_extra_cols — identify_extra_cols","text":"Identifies columns baseline dataset comparator dataset","code":""},{"path":"https://gowerc.github.io/diffdf/reference/identify_extra_cols.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"identify_extra_cols — identify_extra_cols","text":"","code":"identify_extra_cols(DS1, DS2)"},{"path":"https://gowerc.github.io/diffdf/reference/identify_extra_cols.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"identify_extra_cols — identify_extra_cols","text":"DS1 Baseline dataset (data frame) DS2 Comparator dataset (data frame)","code":""},{"path":"https://gowerc.github.io/diffdf/reference/identify_extra_rows.html","id":null,"dir":"Reference","previous_headings":"","what":"identify_extra_rows — identify_extra_rows","title":"identify_extra_rows — identify_extra_rows","text":"Identifies rows baseline dataset comparator dataset","code":""},{"path":"https://gowerc.github.io/diffdf/reference/identify_extra_rows.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"identify_extra_rows — identify_extra_rows","text":"","code":"identify_extra_rows(DS1, DS2, KEYS)"},{"path":"https://gowerc.github.io/diffdf/reference/identify_extra_rows.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"identify_extra_rows — identify_extra_rows","text":"DS1 Baseline dataset (data frame) DS2 Comparator dataset (data frame) KEYS List variables define unique row within datasets (strings)","code":""},{"path":"https://gowerc.github.io/diffdf/reference/identify_matching_cols.html","id":null,"dir":"Reference","previous_headings":"","what":"identify_matching_cols — identify_matching_cols","title":"identify_matching_cols — identify_matching_cols","text":"Identifies columns name two data frames","code":""},{"path":"https://gowerc.github.io/diffdf/reference/identify_matching_cols.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"identify_matching_cols — identify_matching_cols","text":"","code":"identify_matching_cols(DS1, DS2, EXCLUDE = \"\")"},{"path":"https://gowerc.github.io/diffdf/reference/identify_matching_cols.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"identify_matching_cols — identify_matching_cols","text":"DS1 Input dataset 1 (data frame) DS2 Input dataset 2 (data frame) EXCLUDE Columns ignore","code":""},{"path":"https://gowerc.github.io/diffdf/reference/identify_mode_differences.html","id":null,"dir":"Reference","previous_headings":"","what":"identify_mode_differences — identify_mode_differences","title":"identify_mode_differences — identify_mode_differences","text":"Identifies mode differences two data frames","code":""},{"path":"https://gowerc.github.io/diffdf/reference/identify_mode_differences.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"identify_mode_differences — identify_mode_differences","text":"","code":"identify_mode_differences(BASE, COMP)"},{"path":"https://gowerc.github.io/diffdf/reference/identify_mode_differences.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"identify_mode_differences — identify_mode_differences","text":"BASE Base dataset comparison (data.frame) COMP Comparator dataset compare base (data.frame)","code":""},{"path":"https://gowerc.github.io/diffdf/reference/identify_properties.html","id":null,"dir":"Reference","previous_headings":"","what":"identify_properties — identify_properties","title":"identify_properties — identify_properties","text":"Returns dataframe metadata given dataset. Returned values include variable names , class , mode , type & attributes","code":""},{"path":"https://gowerc.github.io/diffdf/reference/identify_properties.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"identify_properties — identify_properties","text":"","code":"identify_properties(dsin)"},{"path":"https://gowerc.github.io/diffdf/reference/identify_properties.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"identify_properties — identify_properties","text":"dsin input dataframe want get metadata ","code":""},{"path":"https://gowerc.github.io/diffdf/reference/identify_unsupported_cols.html","id":null,"dir":"Reference","previous_headings":"","what":"identify_unsupported_cols — identify_unsupported_cols","title":"identify_unsupported_cols — identify_unsupported_cols","text":"Identifies columns package setup handle","code":""},{"path":"https://gowerc.github.io/diffdf/reference/identify_unsupported_cols.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"identify_unsupported_cols — identify_unsupported_cols","text":"","code":"identify_unsupported_cols(dsin)"},{"path":"https://gowerc.github.io/diffdf/reference/identify_unsupported_cols.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"identify_unsupported_cols — identify_unsupported_cols","text":"dsin input dataset","code":""},{"path":"https://gowerc.github.io/diffdf/reference/invert.html","id":null,"dir":"Reference","previous_headings":"","what":"invert — invert","title":"invert — invert","text":"Utility function used replicated purrr::transpose. Turns list inside .","code":""},{"path":"https://gowerc.github.io/diffdf/reference/invert.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"invert — invert","text":"","code":"invert(x)"},{"path":"https://gowerc.github.io/diffdf/reference/invert.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"invert — invert","text":"x list","code":""},{"path":"https://gowerc.github.io/diffdf/reference/is_variable_different.html","id":null,"dir":"Reference","previous_headings":"","what":"is_variable_different — is_variable_different","title":"is_variable_different — is_variable_different","text":"subsets data set variable name, picks differences returns tibble differences given variable","code":""},{"path":"https://gowerc.github.io/diffdf/reference/is_variable_different.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"is_variable_different — is_variable_different","text":"","code":"is_variable_different(variablename, keynames, datain, ...)"},{"path":"https://gowerc.github.io/diffdf/reference/is_variable_different.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"is_variable_different — is_variable_different","text":"variablename name variable compared keynames name keys datain Inputted dataset base compare vectors ... Additional arguments might passed (numerical accuracy)","code":""},{"path":"https://gowerc.github.io/diffdf/reference/is_variable_different.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"is_variable_different — is_variable_different","text":"boolean vector T target current different","code":""},{"path":"https://gowerc.github.io/diffdf/reference/print.diffdf.html","id":null,"dir":"Reference","previous_headings":"","what":"Print diffdf objects — print.diffdf","title":"Print diffdf objects — print.diffdf","text":"Print nicely formatted version diffdf object","code":""},{"path":"https://gowerc.github.io/diffdf/reference/print.diffdf.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print diffdf objects — print.diffdf","text":"","code":"# S3 method for class 'diffdf' print(x, row_limit = 10, as_string = FALSE, ...)"},{"path":"https://gowerc.github.io/diffdf/reference/print.diffdf.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print diffdf objects — print.diffdf","text":"x comparison object created diffdf(). row_limit Max row limit difference tables (NULL show rows) as_string Return printed message R character vector? ... Additional arguments (used)","code":""},{"path":"https://gowerc.github.io/diffdf/reference/print.diffdf.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Print diffdf objects — print.diffdf","text":"","code":"x <- subset(iris, -Species) #> Warning: ‘-’ not meaningful for factors x[1, 2] <- 5 COMPARE <- diffdf(iris, x) #> Warning:  #> There are rows in BASE that are not in COMPARE !! #> Not all Values Compared Equal print(COMPARE) #> Differences found between the objects! #>  #> A summary is given below. #>  #> There are rows in BASE that are not in COMPARE !! #> First 10 of 149 rows are shown in table below #>  #>   =============== #>    ..ROWNUMBER..  #>   --------------- #>          2        #>          3        #>          4        #>          5        #>          6        #>          7        #>          8        #>          9        #>         10        #>         11        #>   --------------- #>  #> Not all Values Compared Equal #> All rows are shown in table below #>  #>   ================================= #>      Variable    No of Differences  #>   --------------------------------- #>    Sepal.Length          1          #>    Sepal.Width           1          #>    Petal.Length          1          #>    Petal.Width           1          #>      Species             1          #>   --------------------------------- #>  #>  #> All rows are shown in table below #>  #>   ============================================ #>      VARIABLE    ..ROWNUMBER..  BASE  COMPARE  #>   -------------------------------------------- #>    Sepal.Length        1        5.1     NA     #>   -------------------------------------------- #>  #>  #> All rows are shown in table below #>  #>   =========================================== #>     VARIABLE    ..ROWNUMBER..  BASE  COMPARE  #>   ------------------------------------------- #>    Sepal.Width        1        3.5      5     #>   ------------------------------------------- #>  #>  #> All rows are shown in table below #>  #>   ============================================ #>      VARIABLE    ..ROWNUMBER..  BASE  COMPARE  #>   -------------------------------------------- #>    Petal.Length        1        1.4     NA     #>   -------------------------------------------- #>  #>  #> All rows are shown in table below #>  #>   =========================================== #>     VARIABLE    ..ROWNUMBER..  BASE  COMPARE  #>   ------------------------------------------- #>    Petal.Width        1        0.2     NA     #>   ------------------------------------------- #>  #>  #> All rows are shown in table below #>  #>   ========================================== #>    VARIABLE  ..ROWNUMBER..   BASE   COMPARE  #>   ------------------------------------------ #>    Species         1        setosa   <NA>    #>   ------------------------------------------ #>  print(COMPARE, row_limit = 5) #> Differences found between the objects! #>  #> A summary is given below. #>  #> There are rows in BASE that are not in COMPARE !! #> First 5 of 149 rows are shown in table below #>  #>   =============== #>    ..ROWNUMBER..  #>   --------------- #>          2        #>          3        #>          4        #>          5        #>          6        #>   --------------- #>  #> Not all Values Compared Equal #> All rows are shown in table below #>  #>   ================================= #>      Variable    No of Differences  #>   --------------------------------- #>    Sepal.Length          1          #>    Sepal.Width           1          #>    Petal.Length          1          #>    Petal.Width           1          #>      Species             1          #>   --------------------------------- #>  #>  #> All rows are shown in table below #>  #>   ============================================ #>      VARIABLE    ..ROWNUMBER..  BASE  COMPARE  #>   -------------------------------------------- #>    Sepal.Length        1        5.1     NA     #>   -------------------------------------------- #>  #>  #> All rows are shown in table below #>  #>   =========================================== #>     VARIABLE    ..ROWNUMBER..  BASE  COMPARE  #>   ------------------------------------------- #>    Sepal.Width        1        3.5      5     #>   ------------------------------------------- #>  #>  #> All rows are shown in table below #>  #>   ============================================ #>      VARIABLE    ..ROWNUMBER..  BASE  COMPARE  #>   -------------------------------------------- #>    Petal.Length        1        1.4     NA     #>   -------------------------------------------- #>  #>  #> All rows are shown in table below #>  #>   =========================================== #>     VARIABLE    ..ROWNUMBER..  BASE  COMPARE  #>   ------------------------------------------- #>    Petal.Width        1        0.2     NA     #>   ------------------------------------------- #>  #>  #> All rows are shown in table below #>  #>   ========================================== #>    VARIABLE  ..ROWNUMBER..   BASE   COMPARE  #>   ------------------------------------------ #>    Species         1        setosa   <NA>    #>   ------------------------------------------ #>"},{"path":"https://gowerc.github.io/diffdf/reference/recursive_reduce.html","id":null,"dir":"Reference","previous_headings":"","what":"recursive_reduce — recursive_reduce","title":"recursive_reduce — recursive_reduce","text":"Utility function used replicated purrr::reduce. Recursively applies function list elements 1 element remains","code":""},{"path":"https://gowerc.github.io/diffdf/reference/recursive_reduce.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"recursive_reduce — recursive_reduce","text":"","code":"recursive_reduce(.l, .f)"},{"path":"https://gowerc.github.io/diffdf/reference/recursive_reduce.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"recursive_reduce — recursive_reduce","text":".l list values apply function .f function apply element list turn. See details.","code":""},{"path":"https://gowerc.github.io/diffdf/reference/recursive_reduce.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"recursive_reduce — recursive_reduce","text":"function essentially performing following operation:","code":".l[[1]] <- .f( .l[[1]] , .l[[2]]) ; .l[[1]] <- .f( .l[[1]] , .l[[3]])"},{"path":"https://gowerc.github.io/diffdf/reference/sort_then_join.html","id":null,"dir":"Reference","previous_headings":"","what":"sort_then_join — sort_then_join","title":"sort_then_join — sort_then_join","text":"Convenience function sort two strings paste together","code":""},{"path":"https://gowerc.github.io/diffdf/reference/sort_then_join.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"sort_then_join — sort_then_join","text":"","code":"sort_then_join(string1, string2)"},{"path":"https://gowerc.github.io/diffdf/reference/sort_then_join.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"sort_then_join — sort_then_join","text":"string1 first string string2 second string","code":""},{"path":"https://gowerc.github.io/diffdf/reference/string_pad.html","id":null,"dir":"Reference","previous_headings":"","what":"Pad String — string_pad","title":"Pad String — string_pad","text":"Utility function used replicate str_pad. Adds white space either end string get equal desired length","code":""},{"path":"https://gowerc.github.io/diffdf/reference/string_pad.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pad String — string_pad","text":"","code":"string_pad(x, width)"},{"path":"https://gowerc.github.io/diffdf/reference/string_pad.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pad String — string_pad","text":"x string width desired length","code":""},{"path":"https://gowerc.github.io/diffdf/news/index.html","id":"diffdf-104900","dir":"Changelog","previous_headings":"","what":"diffdf 1.0.4.900","title":"diffdf 1.0.4.900","text":"Development version Enhanced table printing white space characters clearly defined (#87) row_limit argument now functional print method! (#6, @brianrepko) Fixed bug caused error either base comparison dataset empty (#44) Fixed bug caused error matching keys base comparison dataset (#79)","code":""},{"path":"https://gowerc.github.io/diffdf/news/index.html","id":"diffdf-104","dir":"Changelog","previous_headings":"","what":"diffdf 1.0.4","title":"diffdf 1.0.4","text":"CRAN release: 2020-03-17 new functionality Update make package compatible tibble 3.0.0","code":""},{"path":"https://gowerc.github.io/diffdf/news/index.html","id":"diffdf-103","dir":"Changelog","previous_headings":"","what":"diffdf 1.0.3","title":"diffdf 1.0.3","text":"CRAN release: 2019-03-12 new functionality Update make package compatible changes made sampling within core R","code":""},{"path":"https://gowerc.github.io/diffdf/news/index.html","id":"diffdf-102","dir":"Changelog","previous_headings":"","what":"diffdf 1.0.2","title":"diffdf 1.0.2","text":"CRAN release: 2019-01-09 new functionality Update make package compatible tibble 2.0.0","code":""},{"path":"https://gowerc.github.io/diffdf/news/index.html","id":"diffdf-101","dir":"Changelog","previous_headings":"","what":"diffdf 1.0.1","title":"diffdf 1.0.1","text":"CRAN release: 2018-07-23 Added package site Updated description file include unnamed dependencies test files Added Travis Added CodeCov","code":""},{"path":"https://gowerc.github.io/diffdf/news/index.html","id":"diffdf-100","dir":"Changelog","previous_headings":"","what":"diffdf 1.0.0","title":"diffdf 1.0.0","text":"CRAN release: 2018-05-07 Initial Release !!","code":""}]
